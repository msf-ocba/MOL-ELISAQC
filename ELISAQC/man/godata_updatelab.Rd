% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/godata_updatelab.R
\name{godata_updatelab}
\alias{godata_updatelab}
\title{Update lab records in Go.Data with ELISA results}
\usage{
godata_updatelab(godataids, elisaresults)
}
\arguments{
\item{godataids}{List object containing Go.Data url, outbreak ID and token}

\item{elisaresults}{data.table of ELISA results from ELISAQC}
}
\value{
updates lab records in Go.Data (only shows warnings and errors in R)
}
\description{
This function takes Go.Data user credentials and ELISA results (from ELISAQC)
as input and passes these results to Go.Data.  Both the main lab records and
relevant fields in the lab questionnaire are updated.
}
\note{
\enumerate{
\item Data in the Go.Data MongoDB database is held in a complex structure;
specifically questionnaire questions are nested.  This function updates
these fields in a two-step process; first by un-nesting the relevant fields
to update, then once updated, the updated values are passed back to the
json format and PUT back into Go.Data.  The code for the second step
(updating the json) was developed by James Fuller (WHO Go.Data team).
\item Note that column names are hard-coded (derived from ELISAQC and Go.Data
core data, case and lab questionnaires, respectively).
}

Pre-requisites:
\itemize{
\item The user must already have an account in the Go.Data database
\item The user must know their Go.Data user credentials
\item The user must know the url for their Go.Data instance
}
}
\examples{
 \dontrun{
 # Update lab results:
 godata_updatelab(godataids = godata_getids(), elisaresults = elisaout)
 }

}
